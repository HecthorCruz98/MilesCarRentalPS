// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MilesCarRental.Infraestructure.Persistence;

#nullable disable

namespace MilesCarRental.Infraestructure.Migrations
{
    [DbContext(typeof(MilesCarRentalContext))]
    [Migration("20240302012338_cambioDatosNulos")]
    partial class cambioDatosNulos
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MilesCarRental.Domain.Carro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Chasis")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cilindraje")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FechaAdd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaUp")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdCliente")
                        .HasColumnType("int");

                    b.Property<int>("IdEstadoAlquiler")
                        .HasColumnType("int");

                    b.Property<int>("IdLocalidadDevolucion")
                        .HasColumnType("int");

                    b.Property<int>("IdLocalidadRecogida")
                        .HasColumnType("int");

                    b.Property<string>("UsuarioAdd")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioUp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("usrId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdCliente");

                    b.HasIndex("IdEstadoAlquiler");

                    b.HasIndex("IdLocalidadRecogida");

                    b.HasIndex("usrId");

                    b.ToTable("Carros");
                });

            modelBuilder.Entity("MilesCarRental.Domain.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ApellidoCliente")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DocumentoCliente")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FechaAdd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaUp")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdTipoDocumentoCliente")
                        .HasColumnType("int");

                    b.Property<string>("NombreCliente")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioAdd")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioUp")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdTipoDocumentoCliente");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("MilesCarRental.Domain.EstadoAlquiler", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DescripcionEstadoAlquiler")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FechaAdd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaUp")
                        .HasColumnType("datetime2");

                    b.Property<string>("UsuarioAdd")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioUp")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("EstadoAlquilers");
                });

            modelBuilder.Entity("MilesCarRental.Domain.Localidad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DescripcionLocalidad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FechaAdd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaUp")
                        .HasColumnType("datetime2");

                    b.Property<string>("UsuarioAdd")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioUp")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Localidades");
                });

            modelBuilder.Entity("MilesCarRental.Domain.TipoDocumento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DescripcionTipoDocumento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FechaAdd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaUp")
                        .HasColumnType("datetime2");

                    b.Property<string>("UsuarioAdd")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioUp")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TipoDocumentos");
                });

            modelBuilder.Entity("MilesCarRental.Domain.Carro", b =>
                {
                    b.HasOne("MilesCarRental.Domain.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("IdCliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MilesCarRental.Domain.EstadoAlquiler", "EstadoAlquiler")
                        .WithMany()
                        .HasForeignKey("IdEstadoAlquiler")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MilesCarRental.Domain.Localidad", "LocalidadRecogida")
                        .WithMany()
                        .HasForeignKey("IdLocalidadRecogida")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MilesCarRental.Domain.Localidad", "LocalidadDevolucion")
                        .WithMany()
                        .HasForeignKey("usrId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("EstadoAlquiler");

                    b.Navigation("LocalidadDevolucion");

                    b.Navigation("LocalidadRecogida");
                });

            modelBuilder.Entity("MilesCarRental.Domain.Cliente", b =>
                {
                    b.HasOne("MilesCarRental.Domain.TipoDocumento", "TipoDocumento")
                        .WithMany()
                        .HasForeignKey("IdTipoDocumentoCliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TipoDocumento");
                });
#pragma warning restore 612, 618
        }
    }
}
